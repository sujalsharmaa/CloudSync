apiVersion: v1
kind: Service
metadata:
  name: zookeeper-svc
  labels:
    app: zookeeper
spec:
  ports:
  - port: 2181
    name: client
  # This creates a "headless" service
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  serviceName: zookeeper-svc
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      # This fixes the "Permission denied" error
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.0.1
        ports:
        - containerPort: 2181
          name: client
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        - name: ZOOKEEPER_SERVER_ID
          value: "1"
        - name: ZOOKEEPER_SERVERS
          value: "zookeeper-0.zookeeper-svc.default.svc.cluster.local:2888:3888"
        # Mounts for the data and log volumes
        volumeMounts:
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper/data
        - name: zookeeper-log
          mountPath: /var/lib/zookeeper/log
          
  # This template automatically creates PersistentVolumeClaims
  # for data and logs.
  volumeClaimTemplates:
  - metadata:
      name: zookeeper-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard" # Or your cloud's default
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: zookeeper-log
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard" # Or your cloud's default
      resources:
        requests:
          storage: 1Gi

