apiVersion: v1
kind: ConfigMap
metadata:
  name: search-service-config
data:
  # I've merged your .properties and .yaml into one clean file
  application.yaml: |
    server:
      port: 8085
      
    spring:
      application:
        name: search-service
        
      # === Redis ===
      data:
        redis:
          host: redis.default.svc.cluster.local
          port: 6379
          
      # === Security ===
      security:
        oauth2:
          resourceserver:
            jwt:
              issuer-uri: https://accounts.google.com
              
      # === Kafka ===
      kafka:
        bootstrap-servers: kafka-svc.default.svc.cluster.local:9092
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.apache.kafka.common.serialization.StringSerializer
        consumer:
          group-id: rag-pipeline-group
          auto-offset-reset: earliest
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          
      # === PostgreSQL ===
      datasource:
        url: jdbc:postgresql://postgres.default.svc.cluster.local:5432/postgres
        driver-class-name: org.postgresql.Driver
        # username and password will be injected from the Secret
        
      jpa:
        hibernate:
          ddl-auto: update
        show-sql: true
        properties:
          hibernate:
            format_sql: true
            dialect: org.hibernate.dialect.PostgreSQLDialect
            
      # === Elasticsearch ===
      elasticsearch:
        uris: http://elasticsearch.default.svc.cluster.local:9200
        # username and password will be injected from the Secret
        
      # === Spring AI ===
      ai:
        # api-key will be injected from the Secret
        vectorstore:
          chroma:
            client-host: 52.23.165.28
            client-port: 8000
            collection-name: drive-documents
        autoconfigure:
          exclude:
            - org.springframework.ai.model.openai.autoconfigure.OpenAiAudioSpeechAutoConfiguration
            - org.springframework.ai.vectorstore.chroma.autoconfigure.ChromaVectorStoreAutoConfiguration

    # === App-specific ===
    app:
      jwt:
        # secret will be injected from the Secret
        expiration: 86400000 

    # === langchain4j ===
    genai:
      provider: gemini
      gemini:
        # api-key will be injected from the Secret
        model:
          text: gemini-2.0-flash-001
          code: gemini-2.0-flash-001
          image: gemini-2.0-flash-001
          embedding: text-embedding-004
          video: gemini-2.0-flash-001

    # === Logging ===
    logging:
      level:
        org:
          springframework:
            security: DEBUG
            oauth2: DEBUG
